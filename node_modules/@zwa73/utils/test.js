let {SList,SHashMap,SEntry,SFfmpegTool,fileSearch,sleep,SLogger} = require('./dist');

let slist = new SList([1,2,3,3,4,5,6]);
slist.each(val => console.log(val));
for(let v of slist)
    console.log(v)

let map = new SHashMap();
map.put("123",456)
map.put("789",111)
for(let {key,value} of map)
    console.log(key,value)

//SFfmpegTool.setFfmpegPath("E:/系统工具/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe");
async function main(){
	//SFfmpegTool.setFfmpegPath("E:/系统工具/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe");
	//console.log(111111111111)
	let timelog = SLogger.time("timetest0")
	timelog[0]=process.hrtime()[0]-1000;
	SLogger.timeEnd("timetest0")
    SLogger.time("timetest")
	let data = await SFfmpegTool.getAudioMetaData("input.wav");
	//console.log(22)
    console.log(data);
	//
    //let fileMap = fileSearch("F:/Sosarciel/SoulTide-Collection-VITS-TrainingSet/TrainingSet/Akaset/sliced_audio",'.*\\.wav');
    //let ioMap = {};
    //for(let key in fileMap){
    //    let value = fileMap[key];
    //    ioMap[value] = "./test/"+key;
    //}
    //console.log(ioMap)
    //await SFfmpegTool.resampleMP(ioMap)
	await sleep(2000);
	SLogger.timeEnd("timetest")
}

main();
let a= {a:1};
SLogger.createLogger("default","silly","./testlog","silly")
//SLogger.createLogger("default","silly");
SLogger.fatal('This is an fatal message');
SLogger.error('This is an error message');
SLogger.warn('This is a warning message');
SLogger.info('This is an info message');
SLogger.http('This is an http message');
SLogger.verbose('This is a verbose message');
SLogger.debug('This is a debug message');
SLogger.silly('This is a silly message');

SLogger.fatal('This is an info message',123,true);
SLogger.info({a:"1111111111111111111111111111111111111111111111111111111111111111111111111111111\n11111"});

